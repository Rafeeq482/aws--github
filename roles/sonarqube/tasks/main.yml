---
- name: Ensure apt cache is updated
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: yes

- name: Upgrade all packages to latest version
  apt:
    upgrade: dist
  become: yes

- name: Install required dependencies
  apt:
    name:
      - "{{ java_package }}"
      - unzip
      - wget
      - postgresql
      - postgresql-contrib
    state: present
  become: yes

- name: Ensure PostgreSQL service is running
  service:
    name: postgresql
    state: started
    enabled: yes
  become: yes

- name: Ensure PostgreSQL cluster is initialized
  command: pg_lsclusters
  register: cluster_check
  changed_when: false
  become: yes

- name: Initialize default PostgreSQL cluster if missing
  command: pg_createcluster {{ postgresql_version | default('14') }} main --start
  when: "'online' not in cluster_check.stdout"
  become: yes

- name: Copy DB creation script
  copy:
    src: create_sonar_db.sh
    dest: /tmp/create_db.sh
    mode: '0755'
    owner: postgres
    group: postgres
  become: yes

- name: Wait for PostgreSQL to become available
  shell: |
    until pg_isready -h localhost -p 5432 -U postgres; do
      sleep 1
    done
  become: yes
  become_user: ubuntu

- name: Execute PostgreSQL DB creation script with sudo -u postgres
  shell: sudo -u postgres bash create_db.sh "{{ sonarqube_db_user }}" "{{ sonarqube_db_password }}" "{{ sonarqube_db_name }}"
  args:
    chdir: /tmp
  become: yes
  become_user: ubuntu

# --- SonarQube Setup ---
- name: Create SonarQube system user
  user:
    name: "{{ sonarqube_user }}"
    system: yes
    shell: /bin/false
    create_home: no
  become: yes

- name: Download SonarQube
  get_url:
    url: "{{ sonarqube_download_url }}"
    dest: "/opt/sonarqube-{{ sonarqube_version }}.zip"
    mode: '0644'
  become: yes

- name: Remove existing SonarQube directory if present
  file:
    path: /opt/sonarqube
    state: absent
  become: yes

- name: Create SonarQube base directory
  file:
    path: /opt/sonarqube
    state: directory
    mode: '0755'
  become: yes

- name: Unzip SonarQube directly into /opt/sonarqube
  unarchive:
    src: "/opt/sonarqube-{{ sonarqube_version }}.zip"
    dest: /opt/sonarqube
    remote_src: yes
    extra_opts: [--strip-components=1]
  become: yes

- name: Ensure ubuntu owns the SonarQube directory
  command: chown -R ubuntu:ubuntu /opt/sonarqube
  become: yes

- name: Ensure conf directory exists
  file:
    path: /opt/sonarqube/conf
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'
  become: yes

- name: Configure sonar.properties
  template:
    src: sonar.properties.j2
    dest: /opt/sonarqube/conf/sonar.properties
    owner: ubuntu
    group: ubuntu
    mode: '0644'
    force: yes
  become: yes

- name: Create systemd service file
  template:
    src: sonarqube.service.j2
    dest: /etc/systemd/system/sonarqube.service
    mode: '0644'
  become: yes

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: yes

- name: Enable and start SonarQube service
  systemd:
    name: sonarqube
    state: started
    enabled: yes
  become: yes
