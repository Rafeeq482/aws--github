---
- name: Ensure apt cache is updated
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: yes

- name: Upgrade all packages to latest version
  apt:
    upgrade: dist
  become: yes

- name: Install required dependencies
  apt:
    name:
      - "{{ java_package }}"
      - unzip
      - wget
      - postgresql
      - postgresql-contrib
      - python3-psycopg2   # Required for Ansible PostgreSQL modules
    state: present
  become: yes

- name: Ensure PostgreSQL service is running
  service:
    name: postgresql
    state: started
    enabled: yes
  become: yes

# --- Added PostgreSQL cluster initialization ---
- name: Ensure PostgreSQL cluster is initialized (Debian/Ubuntu)
  command: pg_lsclusters
  register: cluster_check
  changed_when: false
  become: yes

- name: Initialize default PostgreSQL cluster if missing
  command: pg_createcluster {{ postgresql_version | default('14') }} main --start
  when: "'online' not in cluster_check.stdout"
  become: yes

- name: Ensure postgres DB role exists
  become: yes
  become_user: postgres
  postgresql_user:
    name: postgres
    state: present
# --- End of added section ---

- name: Create PostgreSQL user
  become: yes
  become_user: postgres
  postgresql_user:
    name: "{{ sonarqube_db_user }}"
    password: "{{ sonarqube_db_password }}"
    encrypted: yes
  when: sonarqube_db_user is defined and sonarqube_db_password is defined

- name: Create PostgreSQL database
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ sonarqube_db_name }}"
    owner: "{{ sonarqube_db_user }}"
  when: sonarqube_db_name is defined and sonarqube_db_user is defined

- name: Create SonarQube system user
  user:
    name: "{{ sonarqube_user }}"
    system: yes
    shell: /bin/false
    create_home: no
  become: yes

- name: Download SonarQube
  get_url:
    url: "{{ sonarqube_download_url }}"
    dest: "/opt/sonarqube-{{ sonarqube_version }}.zip"
    mode: '0644'
  become: yes

- name: Unzip SonarQube
  unarchive:
    src: "/opt/sonarqube-{{ sonarqube_version }}.zip"
    dest: /opt
    remote_src: yes
    creates: "/opt/sonarqube-{{ sonarqube_version }}"
  become: yes

- name: Move SonarQube directory
  command: mv "/opt/sonarqube-{{ sonarqube_version }}" "{{ sonarqube_install_dir }}"
  args:
    removes: "{{ sonarqube_install_dir }}"
  become: yes

- name: Set SonarQube ownership
  file:
    path: "{{ sonarqube_install_dir }}"
    owner: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
    recurse: yes
  become: yes

- name: Configure sonar.properties
  template:
    src: sonar.properties.j2
    dest: "{{ sonarqube_install_dir }}/conf/sonar.properties"
    owner: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
  become: yes

- name: Create systemd service file
  template:
    src: sonarqube.service.j2
    dest: /etc/systemd/system/sonarqube.service
  become: yes

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: yes

- name: Enable and start SonarQube service
  systemd:
    name: sonarqube
    state: started
    enabled: yes
  become: yes
